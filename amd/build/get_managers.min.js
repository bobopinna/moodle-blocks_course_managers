define("block_course_managers/get_managers",["exports","core/ajax","core/templates"],(function(_exports,_ajax,_templates){var obj;
/**
   * Provides the list of courses managers.
   *
   * @module      block_course_managers/get_managers
   * @copyright   2023 Roberto Pinna
   * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   */Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.getManagers=getManagers,_exports.init=void 0,_ajax=(obj=_ajax)&&obj.__esModule?obj:{default:obj};const Selectors_filter="block-course_managers-search-filter",Selectors_list="block-course_managers-list";async function getManagers(selector,query,blockId){const request={methodname:"block_course_managers_get_managers",args:{query:query,blockid:blockId}};try{const response=await _ajax.default.call([request])[0];let managers=[];response.list.forEach((manager=>{managers.push((0,_templates.render)("block_course_managers/manager_element",manager))})),managers=await Promise.all(managers),document.querySelector(selector).innerHTML=managers.join("\n")}catch(e){window.console.log("Communication error retrieving courses managers")}}_exports.init=blockId=>{document.addEventListener("DOMContentLoaded",(()=>{const filter=document.querySelector(Selectors_filter);filter.addEventListener("keyup",(()=>{getManagers(Selectors_list,filter.value,blockId)})),getManagers(Selectors_list,null,blockId)}))}}));

//# sourceMappingURL=get_managers.min.js.map